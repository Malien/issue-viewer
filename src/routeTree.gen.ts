/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RepoRepositoryIDRouteImport } from './routes/repo.$repositoryID'
import { Route as RepoRepositoryIDIssueIDRouteImport } from './routes/repo.$repositoryID.$issueID'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RepoRepositoryIDRoute = RepoRepositoryIDRouteImport.update({
  id: '/repo/$repositoryID',
  path: '/repo/$repositoryID',
  getParentRoute: () => rootRouteImport,
} as any)
const RepoRepositoryIDIssueIDRoute = RepoRepositoryIDIssueIDRouteImport.update({
  id: '/$issueID',
  path: '/$issueID',
  getParentRoute: () => RepoRepositoryIDRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/repo/$repositoryID': typeof RepoRepositoryIDRouteWithChildren
  '/repo/$repositoryID/$issueID': typeof RepoRepositoryIDIssueIDRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/repo/$repositoryID': typeof RepoRepositoryIDRouteWithChildren
  '/repo/$repositoryID/$issueID': typeof RepoRepositoryIDIssueIDRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/repo/$repositoryID': typeof RepoRepositoryIDRouteWithChildren
  '/repo/$repositoryID/$issueID': typeof RepoRepositoryIDIssueIDRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/repo/$repositoryID' | '/repo/$repositoryID/$issueID'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/repo/$repositoryID' | '/repo/$repositoryID/$issueID'
  id: '__root__' | '/' | '/repo/$repositoryID' | '/repo/$repositoryID/$issueID'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RepoRepositoryIDRoute: typeof RepoRepositoryIDRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/repo/$repositoryID': {
      id: '/repo/$repositoryID'
      path: '/repo/$repositoryID'
      fullPath: '/repo/$repositoryID'
      preLoaderRoute: typeof RepoRepositoryIDRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/repo/$repositoryID/$issueID': {
      id: '/repo/$repositoryID/$issueID'
      path: '/$issueID'
      fullPath: '/repo/$repositoryID/$issueID'
      preLoaderRoute: typeof RepoRepositoryIDIssueIDRouteImport
      parentRoute: typeof RepoRepositoryIDRoute
    }
  }
}

interface RepoRepositoryIDRouteChildren {
  RepoRepositoryIDIssueIDRoute: typeof RepoRepositoryIDIssueIDRoute
}

const RepoRepositoryIDRouteChildren: RepoRepositoryIDRouteChildren = {
  RepoRepositoryIDIssueIDRoute: RepoRepositoryIDIssueIDRoute,
}

const RepoRepositoryIDRouteWithChildren =
  RepoRepositoryIDRoute._addFileChildren(RepoRepositoryIDRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RepoRepositoryIDRoute: RepoRepositoryIDRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
