/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RepoRepositoryIDRouteRouteImport } from './routes/repo.$repositoryID/route'
import { Route as RepoRepositoryIDIndexRouteImport } from './routes/repo.$repositoryID/index'
import { Route as RepoRepositoryIDDiscussionIssueIDRouteImport } from './routes/repo.$repositoryID/_discussion.$issueID'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RepoRepositoryIDRouteRoute = RepoRepositoryIDRouteRouteImport.update({
  id: '/repo/$repositoryID',
  path: '/repo/$repositoryID',
  getParentRoute: () => rootRouteImport,
} as any)
const RepoRepositoryIDIndexRoute = RepoRepositoryIDIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RepoRepositoryIDRouteRoute,
} as any)
const RepoRepositoryIDDiscussionIssueIDRoute =
  RepoRepositoryIDDiscussionIssueIDRouteImport.update({
    id: '/_discussion/$issueID',
    path: '/$issueID',
    getParentRoute: () => RepoRepositoryIDRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/repo/$repositoryID': typeof RepoRepositoryIDRouteRouteWithChildren
  '/repo/$repositoryID/': typeof RepoRepositoryIDIndexRoute
  '/repo/$repositoryID/$issueID': typeof RepoRepositoryIDDiscussionIssueIDRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/repo/$repositoryID': typeof RepoRepositoryIDIndexRoute
  '/repo/$repositoryID/$issueID': typeof RepoRepositoryIDDiscussionIssueIDRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/repo/$repositoryID': typeof RepoRepositoryIDRouteRouteWithChildren
  '/repo/$repositoryID/': typeof RepoRepositoryIDIndexRoute
  '/repo/$repositoryID/_discussion/$issueID': typeof RepoRepositoryIDDiscussionIssueIDRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/repo/$repositoryID'
    | '/repo/$repositoryID/'
    | '/repo/$repositoryID/$issueID'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/repo/$repositoryID' | '/repo/$repositoryID/$issueID'
  id:
    | '__root__'
    | '/'
    | '/repo/$repositoryID'
    | '/repo/$repositoryID/'
    | '/repo/$repositoryID/_discussion/$issueID'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RepoRepositoryIDRouteRoute: typeof RepoRepositoryIDRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/repo/$repositoryID': {
      id: '/repo/$repositoryID'
      path: '/repo/$repositoryID'
      fullPath: '/repo/$repositoryID'
      preLoaderRoute: typeof RepoRepositoryIDRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/repo/$repositoryID/': {
      id: '/repo/$repositoryID/'
      path: '/'
      fullPath: '/repo/$repositoryID/'
      preLoaderRoute: typeof RepoRepositoryIDIndexRouteImport
      parentRoute: typeof RepoRepositoryIDRouteRoute
    }
    '/repo/$repositoryID/_discussion/$issueID': {
      id: '/repo/$repositoryID/_discussion/$issueID'
      path: '/$issueID'
      fullPath: '/repo/$repositoryID/$issueID'
      preLoaderRoute: typeof RepoRepositoryIDDiscussionIssueIDRouteImport
      parentRoute: typeof RepoRepositoryIDRouteRoute
    }
  }
}

interface RepoRepositoryIDRouteRouteChildren {
  RepoRepositoryIDIndexRoute: typeof RepoRepositoryIDIndexRoute
  RepoRepositoryIDDiscussionIssueIDRoute: typeof RepoRepositoryIDDiscussionIssueIDRoute
}

const RepoRepositoryIDRouteRouteChildren: RepoRepositoryIDRouteRouteChildren = {
  RepoRepositoryIDIndexRoute: RepoRepositoryIDIndexRoute,
  RepoRepositoryIDDiscussionIssueIDRoute:
    RepoRepositoryIDDiscussionIssueIDRoute,
}

const RepoRepositoryIDRouteRouteWithChildren =
  RepoRepositoryIDRouteRoute._addFileChildren(
    RepoRepositoryIDRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RepoRepositoryIDRouteRoute: RepoRepositoryIDRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
